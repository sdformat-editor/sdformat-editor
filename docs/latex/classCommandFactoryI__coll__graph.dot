digraph "CommandFactoryI"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",shape=plain,label=<<TABLE CELLBORDER="0" BORDER="1"><TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">CommandFactoryI</TD></TR>
<HR/>
<TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">&nbsp;</TD></TR>
<HR/>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual std::unique<BR ALIGN="LEFT"/>_ptr&lt; CommandI &gt; MakeOpenFile<BR ALIGN="LEFT"/>Command()=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual std::unique<BR ALIGN="LEFT"/>_ptr&lt; CommandI &gt; MakeDelete<BR ALIGN="LEFT"/>ElementCommand(sdf::ElementPtr<BR ALIGN="LEFT"/> element_to_delete)=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual std::unique<BR ALIGN="LEFT"/>_ptr&lt; CommandI &gt; MakeUndoCommand()=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual std::unique<BR ALIGN="LEFT"/>_ptr&lt; CommandI &gt; MakeRedoCommand()=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual std::unique<BR ALIGN="LEFT"/>_ptr&lt; CommandI &gt; MakeSaveFile<BR ALIGN="LEFT"/>Command()=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual std::unique<BR ALIGN="LEFT"/>_ptr&lt; CommandI &gt; MakeModify<BR ALIGN="LEFT"/>AttributeCommand(sdf::ParamPtr<BR ALIGN="LEFT"/> attribute_to_modify, std::string<BR ALIGN="LEFT"/> new_value)=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual std::unique<BR ALIGN="LEFT"/>_ptr&lt; CommandI &gt; MakeModify<BR ALIGN="LEFT"/>ElementCommand(sdf::ElementPtr<BR ALIGN="LEFT"/> element_to_modify, std::string<BR ALIGN="LEFT"/> new_value)=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual void PushToUndoCommands<BR ALIGN="LEFT"/>Stack(std::unique_ptr&lt; CommandI<BR ALIGN="LEFT"/> &gt; command, const bool new_change=true)=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual void PushToRedoCommands<BR ALIGN="LEFT"/>Stack(std::unique_ptr&lt; CommandI<BR ALIGN="LEFT"/> &gt; command)=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual void ClearUndoRedo<BR ALIGN="LEFT"/>Stacks()=0<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">virtual void Initialize<BR ALIGN="LEFT"/>(std::shared_ptr&lt; GUII<BR ALIGN="LEFT"/> &gt; gui, std::shared_ptr<BR ALIGN="LEFT"/>&lt; SDFormatParserI &gt; sdformatParser)=0<BR ALIGN="LEFT"/></TD></TR>
</TABLE>>
,height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Interface for the SDFormat Editor's Command Factory."];
}
